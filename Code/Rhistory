plot(conc,signal)
lm(signal~conc)
lme=lm(signal~conc)
abline(lme)
coef(signal~conc)
coef(lme)
resid(lme)
fitted(lme)
r <- resid(lme)
plot(conc,r)
plot(conc,r,pch=19)
cor(conc~signal)
cor(conc,signal)
cov(conc,signal)
f <- c(153,144,162,149,127,158,158,153)
fi <- c(145,140,145,170,145,175,170,160)
cor(f,fi)
plot(f,fi)
plot(f,fi,pch=20)
t <- c(12,24,3,13,38,4,5,15,25,45,25)
p <- c(319,289,389,239,149,289,359,259,229,129,199)
plot(t,f)
plot(t,p)
lm(p~t)
x <- c(3700,2500,2800,1900,1000,800,1700,600)
y <- c(87,84,82,74,73,69,68,55)
mean(y)
lmr <- lm(y~x)
ycap <- fitted(lm)
ycap <- fitted(lmr)
numerator <- (ycap-mean(y))^2
sum(numerator)
denominator <- (y-mean(y))^2
r <- sum(numerator)/sum(denominator)
r
summary(lmr)$r.squared
cor(x,y)
s <- data.frame(lands=c("down", "up"))
s
tosscoin(8)
library(prob)
install.packages("prob", repos = "http://r-forge.r-project.org")
install.packages("prob",repos="http://cran.r-project.org/web/packages/prob/index.html")
install.packages(prob)
install.packages("prob")
library(prob)
tosscoin(1)
rolldie(1)
rolldie(2)
tosscoin(1)
library(prob)
tosscoin(1)
head(cards())
card()
cards()
cards(heart=T)
cards(Heart=T)
cards(jokers=T)
s <- cards()
s(1;3)
s(1:3)
subset(s,suit="Heart")
subset(s,suit=="Heart")
subset(s,rankin 7:9)
subset(s,rank%in%7:9)
subset(s,rank 7:9)
s <- rolldie(4)
isin(s,c(2,2,6))
rolldie(1,makespace=TRUE)
tosscoin(2,makespace=true)
tosscoin(2,makespace=TRUE)
t <- tosscoin(2)
tosscoin(2)
probspace(tosscoin(2))
n  <- c(11, 7, 31)
k <- c(3,4,3)
r <- c(FALSE,FALSE,TRUE)
x <- nsamp(n,k,rep=r,ordered=TRUE)
x
prod(x)
990*840*29791
(11 * 10 * 9) * (7 * 6 * 5 * 4) * 313
factorial(c(4,2))
library(prob)
tosscoin(6,makespace=TRUE)
subset(tosscoin(6),s=='H')
subset(tosscoin(6),s=="H")
tosscoin
s <- tosscoin(6)
subset(s,isin(s,c(H)))
subset(s,isin(s,H))
x1 = seq(-6,6, by = 0.01)
plot(x1, dnorm(x1, 0, 1.5), type="l", las=1, col="blue")
plot(x1, dnorm(x1, 0, 1.5), type="l", las=0, col="blue")
plot(x1, dnorm(x1, 0, 1.5), type="l", las=1, col="blue")
plot(x1, dnorm(x1, 0, 1.5), type="l", las=2, col="blue")
plot(x1, dnorm(x1, 0, 1.5), type="l", las=3, col="blue")
plot(x1, dnorm(x1, 0, 1.5), type="l", las=2, col="blue")
x2 = seq(-3, 3, by = 0.01)
y2 = dnorm(x2, 0, 1.5)
y2
plot(y2)
polygon(c(-3, x2, 3), c(0, y2, 0), col = "blue")
polygon(c(-3, x2, 3), c(0, y2, 0), col = "blue")
ppois(16,lambda=12, lower=FALSE)
ppois(16,lambda=12, lower.tail=FALSE)
dbinom(4,2,0.3)
pbinom(4,2,0.3)
dbinom(10,25,0.3)
pbinom(10,25,0.3)
pbinom(5,25,0.3)
pbinom(8,15,0.6)
pbinom(7,15,0.6)
pbinom(12,20,0.2)-pbinom(6,20,0.2)
ppois(5,4.6,lower=FALSE)
ppois(6,4.6,lowe=FALSE)
ppois(6,4.6,lower=FALSE)
1-ppois(5,4.6)
((90000-14000)*0.35)-(14000*0.65)
14000/90000
dpois(20,16)
dpois(20,6)
dpois(0,6)
ppois(9,60)
0.375*8
16/9
2-(16/9)
punif(19,min=18,max=20,lower.tail=FALSE)
(punif(14,min=10,max=16,lower.tail=FALSE))/(punif(13,min=10,max=16,lower.tail=FALSE)
(punif(14,min=10,max=16,lower.tail=FALSE))/(punif(13,min=10,max=16,lower.tail=FALSE)
(punif(14,min=10,max=16,lower.tail=FALSE))/(punif(13,min=10,max=16,lower.tail=FALSE)
=
quit
quit()
(punif(14,min=10,max=16,lower.tail=FALSE))/(punif(13,min=10,max=16,lower.tail=FALSE)
)
2/3
>install.packages("Rmisc")
install.packages("Rmisc")
require("Rmisc")
CI(x,ci=0.95)
CI(x,ci=0.95)
CI(x,ci=0.95)
punif(4,min=0,max=2,lower.tail=FALSE)
dunif(2,min=0,max=2)
dunif(0,min=0,max=2)
pnorm(4,1,1,lower.tail=FALSE)
pnorm(4,1,5,lower.tail=FALSE)
pnorm(4,1,5)
pnorm(3,1,5)
pnorm(3,0,1)
pnorm(4,1,5)
pnorm(4,mean=1,sd=5)
qrt(5)
sqrt(5)
pnorm(4,1,2.236,lower.tail=FALSE)
dpois(0,2)
pexp(20,20,lower.tail=FALSE)
pexp(20,0.2,lower.tail=FALSE)
pexp(20,0.1,lower.tail=FALSE)
dpois(1,1)
dpois(0,0.5)
0.6065307* 0.3678794
pexp(20000,20,lower.tail=FALSE)
pexp(20000,0.05,lower.tail=FALSE)
pexp(20000,20000,lower.tail=FALSE)
pexp(20000,(1/20000),lower.tail=FALSE)
e^-1
punif(30,min=0,max=40,lower.tail=FALSE)
punif(10,min=0,max=40,lower.tail=FALSE)
0.25/0.75
1/2.718
pnorm(9,10,1.4,lower.tail=FALSE)
pbinom
pbinom(2,5,0.7624747)
pnorm(110,100,(30/sqrt(30)))-pnorm(96,100,(30/sqrt(30)))
qnorm(0.25)*0.3
qnorm(2.5)
qnorm(0.025)
0.05/2
qnorm(0.075)
qnorm(0.975)
qnorm(0.975)*0.3
1.96*3/0.5
11.76^2
sample  <- rnorm(n = 4, mean =10, sd = 2)
sample
sample.data <- matrix(o,4,50)
sample.data <- matrix(0,4,50)
for(i in 1:50){}
for(i in 1:50){
sample.data[ , i ] <-  rnorm(n = 4, mean =10, sd = 2)
}
sample.data
for(i in 1:50) {mean[i]   <-mean(sample.data[, i ]); stdv[i]  <- sd(sample.data[ , i])}
for(i in 1:50) {mean[i]   <-mean(sample.data[, i ]); stdv[i]  <- sd(sample.data[ , i])}
for(i in 1:50) {mean[i]   <-mean(sample.data[, i ]); sd[i]  <- sd(sample.data[ , i])}
mean[i]
mean1 <- matrix(0,1,50)
sd1 <- matrix(0,1,50)
for(i in 1:50) {mean1[i]   <-mean(sample.data[, i ]); sd1[i]  <- sd(sample.data[ , i])}
mean1
hist(mean1)
hist(mean1,breaks=c(7,9,11,13,15))
sample.data <- matrix(0,25,50)
for(i in 1:50){}
for(i in 1:50){
sample.data[,i]<-rnorm(25,10,2)
}
mean1 <- matrix(0,1,50)
sd1 <- matrix(0,1,50)
for(i in 1:50){
mean1[i]=mean(sample.data[,i])
}
hist(mean1,breaks=c(7,9,11,13,15))
sample.p <- rbinom(1000,100,0.3)/100
sample.p
mean(sample.p)
sample.p <- rbinom(1000,100,0.3)
mean(sample.p)
t.test(32.5,mu=34,alternative="one.sided")
t.test(32.5,mu=34,alternative="less")
t.test(x=32.5,mu=34,alternative="less")
z <- ((0.51-0.5)/(0.04/5))
pnorm(z)
z
pnorm(z,lower.tail=FALSE)
x <- c(2.7, 2.8, 3.0, 2.3, 2.3, 2.2, 2.8, 2.1, 2.4.)
x <- c(2.7, 2.8, 3.0, 2.3, 2.3, 2.2, 2.8, 2.1, 2.4)
mean(X)
mean(x)
sd(x)
CI(x,conf.level=0.95)
require(misc)
require("Rmisc")
CI(x,conf.level=0.95)
CI(x,ci=0.95)
t.test(x,conf.level=0.95)
qt(0.975,8)
sample <- matrix(0,4,50)
for(i in 1:50){
sample <- rnorm(4,10,2)
}
sample
for(i in 1:50){
sample[,i] <- rnorm(4,10,2)
}
sample <- matrix(0,4,50)
for(i in 1:50){
sample[,i] <- rnorm(4,10,2)
}
sample
dpois(1,1)*dpois(0,0.5)
qnorm(0.99,680,5)
(31.18^2+49.17^2+41.68^2)*2
wheel <- read.csv("C:/Users/sailahari/Desktop/IDS 570/Course content/R/wheel.csv")
View(wheel)
shapiro.test(Wheel$Precision)
shapiro.test(wheel$Precision)
qqnorm(Wheel$Precision)
qqnorm(wheel$Precision)
qqline(Wheel$Precision)
qqline(wheel$Precision)
max(std.wheel)/min(std.wheel)<2
max(std.wheel)/min(std.wheel)<2
max(sd.wheel)/min(sd.wheel)<2
sd(wheel)
power.t.test(n = 49, delta = 5, sd = 15, sig.level = 0.10, power = NULL, type = "one.sample", alternative = "less")
power.t.test(n = 49, delta = 5, sd = 15, sig.level = 0.10, power = NULL, type = "one.sample", alternative = "one.sided")
qnorm(0.99,680,5)
ppois(6,5)-ppois(3,5)
library(prob)
tosscoin(3)
tosscoin(3,makespace=TRUE)
s=C(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27)
s=C(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27)
s<- c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27)
x <- seq
x <- seq(min=0,max=200,length=1)
x <- seq(0,200,length=1)
number <- read.table("C:/Users/sailahari/Desktop/number.csv", header=TRUE, quote="\"")
View(number)
sd(number)
sd(number$num)
weight <- read.table("C:/Users/sailahari/Desktop/DataFiles/weight.csv", header=TRUE, quote="\"")
View(weight)
t.test(weight$Weight,alternative="greater",mu=63,conf.level=0.95)
t.test(weight$Weight,alternative="greater",mu=63)
t.test(weight$Weight,alternative="greater")
t.test(weight$Weight,alternative="greater",mu=63,conf.level=0.95)
sd(weight$Weight)
mean(weight$Weight)
load("C:/Users/sailahari/Desktop/DataFiles/Heartdisease.Rdata")
Heartdisease
chisq.test(Heartdisease)
t.test(weight$Weight,alternative="greater",mu=63,conf.level=0.95)
UShistory <- read.csv("C:/Users/sailahari/Desktop/DataFiles/UShistory.csv")
View(UShistory)
UShistory
test <- aov(UShistory$Scores~UShistory~Majors,data=UShistory)
test <- aov(UShistory$Scores~UShistory$Majors,data=UShistory)
summary(test)
test <- aov(UShistory$Majors~UShistory$Scores,data=UShistory)
test <- aov(Scores~Majors,data=UShistory)
summary(test)
sd(num)
car_data_set_final <- read.csv("C:/Users/sailahari/Downloads/car_data_set_final.csv")
View(car_data_set_final)
summary(car_data_set_final)
summary(car_data_set_final$Mid.range.Price)
quantile(car_data_set_final$Mid.range.Price, c(0,25,50,75,100))
quantile(car_data_set_final$Mid.range.Price, probs=c(0,0.25,0.50,0.75,1))
sd(car_data_set_final$Mid.range.Price)
boxplot(car_data_set_final$Mid.range.Price~car_data_set_final$Type,main="Boxplot comparing different Types", xlab="Types", ylab="Price")
q1 <- quantile(car_data_set_final$Mid.range.Price,0.25)
q3 <- quantile(car_data_set_final$Mid.range.Price,0.75)
IQR <- q3-q1
q1-1.5*IQR
q3+1.5*IQR
car_data_set_final <- read.csv("C:/Users/sailahari/Downloads/car_data_set_final.csv")
View(car_data_set_final)
boxplot(car_data_set_final$Mid.range.Price~car_data_set_final$Type,main="Boxplot comparing different Types", xlab="Types", ylab="Price")
car_data_set_final <- read.csv("C:/Users/sailahari/Downloads/car_data_set_final.csv")
View(car_data_set_final)
boxplot(car_data_set_final$Mid.range.Price~car_data_set_final$Type,main="Boxplot comparing different Types", xlab="Types", ylab="Price")
summary(car_data_set_final$Mid.range.Price)
quantile(car_data_set_final$Mid.range.Price, probs=c(0,0.25,0.50,0.75,1))
sd(car_data_set_final$Mid.range.Price)
sd(car_data_set_final$Mid.range.Price,car_data_set_final$Type="1")
mean
??mean
??mean
hist(car_data_set_final$Mid.range.Price)
hist(car_data_set_final$Mid.range.Price,main="Histogram of Price",xlab="Price",col="Red")
sapply(car_data_set_final$Mid.range.Price, mean, na.rm=TRUE)
sapply(car_data_set_final, mean, na.rm=TRUE)
tapply(car_data_set_final$Mid.range.Price, car_data_set_final$Type,mean)
tapply(car_data_set_final$Mid.range.Price, car_data_set_final$Type,sd)
tapply(car_data_set_final$Mid.range.Price, car_data_set_final$Type,length)
plot(tapply(car_data_set_final$Mid.range.Price, car_data_set_final$Type,mean))
plot(tapply(car_data_set_final$Mid.range.Price, car_data_set_final$Type,mean), ylab="Mean for different types")
plot(tapply(car_data_set_final$Mid.range.Price, car_data_set_final$Type,mean), ylab="Mean plot for different types")
plot(tapply(car_data_set_final$Mid.range.Price, car_data_set_final$Type,mean), ylab="Mean plot for different types",ylim=c(0,30))
plot(tapply(car_data_set_final$Mid.range.Price, car_data_set_final$Type,mean), ylab="Mean plot for different types",ylim=c(0,25))
plot(tapply(car_data_set_final$Mid.range.Price, car_data_set_final$Type,mean), ylab="Mean plot for different types",ylim=c(0,28))
plot(tapply(car_data_set_final$Mid.range.Price, car_data_set_final$Type,mean), ylab="Mean plot for different types",ylim=c(5,28))
stem(car_data_set_final$Mid.range.Price)
stem(car_data_set_final$Mid.range.Price,scale=4)
stem(car_data_set_final$Mid.range.Price)
stem(car_data_set_final$Mid.range.Price,scale=2)
stem(car_data_set_final$Mid.range.Price,scale=4)
stem(car_data_set_final$Mid.range.Price,scale=8)
car_data_set_final <- read.csv("C:/Users/sailahari/Downloads/car_data_set_final.csv")
View(car_data_set_final)
summary(car_data_set_final$Mid.range.Price)
sd(car_data_set_final$Mid.range.Price)
quantile(car_data_set_final$Mid.range.Price, probs=c(0,0.25,0.50,0.75,1))
boxplot(car_data_set_final$Mid.range.Price~car_data_set_final$Type,main="Boxplot comparing different Types", xlab="Types", ylab="Price")
summary(car_data_set_final$Mid.range.Price)
sd(car_data_set_final$Mid.range.Price)
quantile(car_data_set_final$Mid.range.Price, probs=c(0,0.25,0.50,0.75,1))
car_data_set_final <- read.csv("C:/Users/sailahari/Downloads/car_data_set_final.csv")
View(car_data_set_final)
summary(car_data_set_final$Mid.range.Price)
sd(car_data_set_final$Mid.range.Price)
quantile(car_data_set_final$Mid.range.Price, probs=c(0,0.25,0.50,0.75,1))
boxplot(car_data_set_final$Mid.range.Price~car_data_set_final$Type,main="Boxplot comparing different Types", xlab="Types", ylab="Price")
tapply(car_data_set_final$Mid.range.Price, car_data_set_final$Type,mean)
tapply(car_data_set_final$Mid.range.Price, car_data_set_final$Type,sd)
tapply(car_data_set_final$Mid.range.Price, car_data_set_final$Type,length)
> hist(car_data_set_final$Mid.range.Price,main="Histogram of Price",xlab="Price",col="Red")
hist(car_data_set_final$Mid.range.Price,main="Histogram of Price",xlab="Price",col="Red")
> plot(tapply(car_data_set_final$Mid.range.Price, car_data_set_final$Type,mean), ylab="Mean plot for different types",ylim=c(5,28))
plot(tapply(car_data_set_final$Mid.range.Price, car_data_set_final$Type,mean), ylab="Mean plot for different types",ylim=c(5,28))
stem(car_data_set_final$Mid.range.Price)
stem(car_data_set_final$Mid.range.Price,scale=2)
stem(car_data_set_final$Mid.range.Price,scale=3)
stem(car_data_set_final$Mid.range.Price,scale=4)
qqplot(car_data_set_final$Mid.range.Price)
qqplot(car_data_set_final$Mid.range.Price[car_data_set_final$Type=='1'])
qqnorm( Mid.range.Price[Type == ‘1’], main = ”Normal QQ-plot for Group  = A”)
y <- car_data_set_final$Mid.range.Price
qqnorm(y)
qqline(y,col="red")
tapply(car_data_set_final$Mid.range.Price, car_data_set_final$Type=="1")
tapply(car_data_set_final$Mid.range.Price, car_data_set_final$Type)
sapply(car_data_set_final$Mid.range.Price, car_data_set_final$Type=="1")
sapply(car_data_set_final$Mid.range.Price, car_data_set_final$Type)
stack(car_data_set_final$Mid.range.Price, car_data_set_final$Type=="1")
stack
??stack
??lapply
stack(car_data_set_final$Mid.range.Price)
car_data_set_final <- read.csv("C:/Users/sailahari/Downloads/car_data_set_final.csv")
View(car_data_set_final)
summary(car_data_set_final$Mid.range.Price)
t1 <- car_data_set_final$Type[2:17]
t1
t1 <- car_data_set_final$Mid.range.Price[1:17]
t1 <- car_data_set_final$Mid.range.Price[1:16]
t1
t2 <- car_data_set_final$Mid.range.Price[17:27]
t2
t3 <- car_data_set_final$Mid.range.Price[28:46]
t3
t2 <- car_data_set_final$Mid.range.Price[47:66]
t2 <- car_data_set_final$Mid.range.Price[17:27]
t2
t4 <- car_data_set_final$Mid.range.Price[47:66]
t5 <- car_data_set_final$Mid.range.Price[67:78]
t.test(t1,t2,alternative="two.sided",conf.level=0.95)
t.test(t1,t2)
t.test(t3,t4)
test <- aov(Mid.range.Price~Type,data=car_data_set_final)
summary(test)
t.test(t1,t3)
t.test(t1,t4)
diabetes <- read.csv("C:/Users/sailahari/Desktop/diabetes1.csv")
View(diabetes)
boxplot(diabetes$dia010~diabetes$ridageyr,main="Boxplot for diabetes with different ages", xlab="Types", ylab="Price")
diabetes <- read.csv("C:/Users/sailahari/Desktop/diabetes1.csv")
View(diabetes)
boxplot(diabetes$dia010~diabetes$ridageyr,main="Boxplot for diabetes with different ages", xlab="Types", ylab="Price")
boxplot(diabetes$diq010~diabetes$ridageyr,main="Boxplot for diabetes with different ages", xlab="Types", ylab="Price")
boxplot(diabetes$ridageyr~diabetes$diq010,main="Boxplot for diabetes with different ages", xlab="Types", ylab="Price")
boxplot(diabetes$diq010~diabetes$ridageyr,main="Boxplot for diabetes with different ages", xlab="Types", ylab="Price")
diabetes <- read.csv("C:/Users/sailahari/Desktop/diabetes1.csv")
View(diabetes)
asthama <- read.csv("C:/Users/sailahari/Desktop/asthama.csv")
View(asthama)
boxplot(asthama$ridageyr~asthama$rdq134,main="Boxplot for asthama with different ages", xlab="asthama types", ylab="age")
boxplot(asthama$ridageyr~asthama$rdq134,main="Boxplot for Asthama with different ages", xlab="Asthama", ylab="Age")
boxplot(asthama$ridageyr~asthama$rdq134,main="Boxplot for Asthama with different ages", xlab="Asthama Response", ylab="Age")
summary(asthama$rdq134)
quantile(asthama$ridageyr,probs=c(0,0.25,0.50,0.75,1))
summary(asthama$ridageyr)
tapply(asthama$ridageyr,asthama$rdq134,mean)
if rdq134=1{hist(asthama$ridageyr,main="Histogram representation for different ages who have diabetes")}
if asthama$rdq134=1{hist(asthama$ridageyr,main="Histogram representation for different ages who have diabetes")}
if(asthama$rdq134=1){hist(asthama$ridageyr,main="Histogram representation for different ages who have diabetes")}
if(asthama$rdq134=1){hist(asthama$ridageyr,main="Histogram representation for different ages who have diabetes")}
if(asthama$rdq134==1){hist(asthama$ridageyr,main="Histogram representation for different ages who have diabetes")}
plot(tapply(asthama$ridageyr,asthama$rdq134,mean), ylab="Mean of different ages", main="Mean plot for different responses",ylim=c(5,28))
plot(tapply(asthama$ridageyr,asthama$rdq134,mean), ylab="Mean of different ages", main="Mean plot for different responses")
plot(tapply(asthama$ridageyr,asthama$rdq134,mean), ylab="Mean of different ages", main="Mean plot for different responses",ylim=c(25,75))
plot(tapply(asthama$ridageyr,asthama$rdq134,mean), ylab="Mean of different ages", main="Mean plot for different responses",ylim=c(25,75),xlim=(1,9))
plot(tapply(asthama$ridageyr,asthama$rdq134,mean), ylab="Mean of different ages", main="Mean plot for different responses",ylim=c(25,75),xlim=c(1,9))
plot(tapply(asthama$ridageyr,asthama$rdq134,mean), ylab="Mean of different ages", main="Mean plot for different responses",ylim=c(25,75))
y <- asthama$ridageyr
qqnorm(y)
qqline(y,col="red")
install.packages("Rmisc")
require("Rmisc")
asthama1 <- read.csv("C:/Users/sailahari/Desktop/asthama1.csv")
View(asthama1)
CI(asthama1$ridageyr)
CI(asthama1$ridageyr,ci=0.95)
t.test(asthama$ridageyr,alternative="two.sided,mu=28.91496")
t.test(asthama$ridageyr,alternative="two.sided",mu=28.91496,conf.level=0.95)
t.test(asthama$ridageyr,alternative="greater",mu=28.91496,conf.level=0.95)
t.test(asthama$ridageyr,alternative="less",mu=31,conf.level=0.95)
t.test(asthama$ridageyr,alternative="less",mu=28.9146,conf.level=0.95)
t.test(asthama$ridageyr,alternative="greater",mu=28.9146,conf.level=0.95)
t.test(asthama$ridageyr,alternative="greater",mu=26,conf.level=0.95)
t.test(asthama$ridageyr,alternative="less",mu=28.9146,conf.level=0.95)
t.test(asthama$ridageyr,alternative="less",mu=28.9146)
t.test(asthama$ridageyr,alternative="less",mu=26.98)
t.test(asthama$ridageyr,alternative="greater",mu=30.848)
t.test(asthama$ridageyr,alternative="two.sided",mu=28.91496,conf.level=0.95)
analytics_challenge <- read.csv("C:/analytics_challenge.csv")
View(analytics_challenge)
cor(analytics_challenge$platform,analytics_challenge$orders)
cor(analytics_challenge$orders,analytics_challenge$platform)
aov(orders~platform,data=analytics_challenge)
aov(new_customer~orders,data=analytics_challenge)
aov(orders~platform,data=analytics_challenge)
qqnorm(orders)
qqnorm(analytics_challenge$orders)
setwd("C:/Users/sailahari/Desktop/IDS 462/Lecture8")
train<- read.csv("Anal00.csv")
str(train)
colnames(train)
train<-subset(train, select = -c(rand, RespHoldout))
colnames(train)
install.packages("randomForest")
library(randomForest)
rf<-randomForest(x=train[-c(1,8)],y=train$Resp,ntree=200,importance=TRUE)
str(rf)
test<-read.csv("Hold00.csv")
test<-subset(test,select=-c(Resp))
colnames(test)
test$Resp<-test$RespHoldout
str(test)
test<-subset(test,select=-c(rand,RespHoldout))
test$rf<-predict(rf,test)
str(test)
install.packages("earth")
library(“earth”)
library("earth")
mars<-earth(x=train[-c(1,8)],y=train$Resp)
summary(mars,digits=2,style="pmax")
test$marspred<-predict(mars,test)
str(test)
install.packages("rpart")
library(rpart)
tree<-rpart(Resp~., data=train[-c(1)], control=rpart.control(cp=.005))
plot(tree, uniform=TRUE,main="Classification Tree for S18 Data")
text(tree, use.n=TRUE, all=TRUE, cex=.8)
test$treepred<-predict(tree,test)
str(test)
write.csv(test,file="test.csv")
post(tree, file = "C:/Users/sailahari/Desktop/IDS 462/Lecture8/tree.ps", title = "Classification Tree for s26 Data")
